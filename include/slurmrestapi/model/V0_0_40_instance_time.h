/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_40_instance_time.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_instance_time_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_instance_time_H_


#include "slurmrestapi/ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  V0_0_40_instance_time
    : public ModelBase
{
public:
    V0_0_40_instance_time();
    virtual ~V0_0_40_instance_time();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_40_instance_time members

    /// <summary>
    /// When the instance will end (UNIX timestamp)
    /// </summary>
    int64_t getTimeEnd() const;
    bool timeEndIsSet() const;
    void unsetTime_end();

    void setTimeEnd(int64_t value);

    /// <summary>
    /// When the instance will start (UNIX timestamp)
    /// </summary>
    int64_t getTimeStart() const;
    bool timeStartIsSet() const;
    void unsetTime_start();

    void setTimeStart(int64_t value);


protected:
    int64_t m_Time_end;
    bool m_Time_endIsSet;
    int64_t m_Time_start;
    bool m_Time_startIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_instance_time_H_ */
