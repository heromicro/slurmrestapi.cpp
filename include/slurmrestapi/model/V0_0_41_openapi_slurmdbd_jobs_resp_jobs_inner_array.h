/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_40_job_array_limits.h"
#include <cpprest/details/basic_types.h>
#include "slurmrestapi/model/V0_0_41_openapi_job_info_resp_jobs_inner_array_task_id.h"

namespace hm {
namespace slurm {
namespace client {
namespace model {

class V0_0_40_job_array_limits;
class V0_0_41_openapi_job_info_resp_jobs_inner_array_task_id;


/// <summary>
/// 
/// </summary>
class  V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array
    : public ModelBase
{
public:
    V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array();
    virtual ~V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array members

    /// <summary>
    /// Job ID of job array, or 0 if N/A
    /// </summary>
    int32_t getJobId() const;
    bool jobIdIsSet() const;
    void unsetJob_id();

    void setJobId(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_40_job_array_limits> getLimits() const;
    bool limitsIsSet() const;
    void unsetLimits();

    void setLimits(const std::shared_ptr<V0_0_40_job_array_limits>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_array_task_id> getTaskId() const;
    bool taskIdIsSet() const;
    void unsetTask_id();

    void setTaskId(const std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_array_task_id>& value);

    /// <summary>
    /// String expression of task IDs in this record
    /// </summary>
    utility::string_t getTask() const;
    bool taskIsSet() const;
    void unsetTask();

    void setTask(const utility::string_t& value);


protected:
    int32_t m_Job_id;
    bool m_Job_idIsSet;
    std::shared_ptr<V0_0_40_job_array_limits> m_Limits;
    bool m_LimitsIsSet;
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_array_task_id> m_Task_id;
    bool m_Task_idIsSet;
    utility::string_t m_Task;
    bool m_TaskIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_array_H_ */
