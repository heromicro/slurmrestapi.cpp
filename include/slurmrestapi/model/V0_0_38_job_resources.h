/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_38_job_resources.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_job_resources_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_job_resources_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_38_node_allocation.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class V0_0_38_node_allocation;

/// <summary>
/// 
/// </summary>
class  V0_0_38_job_resources
    : public ModelBase
{
public:
    V0_0_38_job_resources();
    virtual ~V0_0_38_job_resources();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_38_job_resources members

    /// <summary>
    /// list of assigned job nodes
    /// </summary>
    utility::string_t getNodes() const;
    bool nodesIsSet() const;
    void unsetNodes();

    void setNodes(const utility::string_t& value);

    /// <summary>
    /// number of assigned job cpus
    /// </summary>
    int32_t getAllocatedCpus() const;
    bool allocatedCpusIsSet() const;
    void unsetAllocated_cpus();

    void setAllocatedCpus(int32_t value);

    /// <summary>
    /// number of assigned job hosts
    /// </summary>
    int32_t getAllocatedHosts() const;
    bool allocatedHostsIsSet() const;
    void unsetAllocated_hosts();

    void setAllocatedHosts(int32_t value);

    /// <summary>
    /// array of allocated nodes
    /// </summary>
    std::vector<std::shared_ptr<V0_0_38_node_allocation>>& getAllocatedNodes();
    bool allocatedNodesIsSet() const;
    void unsetAllocated_nodes();

    void setAllocatedNodes(const std::vector<std::shared_ptr<V0_0_38_node_allocation>>& value);


protected:
    utility::string_t m_Nodes;
    bool m_NodesIsSet;
    int32_t m_Allocated_cpus;
    bool m_Allocated_cpusIsSet;
    int32_t m_Allocated_hosts;
    bool m_Allocated_hostsIsSet;
    std::vector<std::shared_ptr<V0_0_38_node_allocation>> m_Allocated_nodes;
    bool m_Allocated_nodesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_job_resources_H_ */
