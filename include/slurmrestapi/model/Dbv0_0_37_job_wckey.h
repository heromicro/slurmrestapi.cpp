/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Dbv0_0_37_job_wckey.h
 *
 * Job assigned wckey details
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_37_job_wckey_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_37_job_wckey_H_


#include "slurmrestapi/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Job assigned wckey details
/// </summary>
class  Dbv0_0_37_job_wckey
    : public ModelBase
{
public:
    Dbv0_0_37_job_wckey();
    virtual ~Dbv0_0_37_job_wckey();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Dbv0_0_37_job_wckey members

    /// <summary>
    /// Job assigned wckey
    /// </summary>
    utility::string_t getWckey() const;
    bool wckeyIsSet() const;
    void unsetWckey();

    void setWckey(const utility::string_t& value);

    /// <summary>
    /// wckey flags
    /// </summary>
    std::vector<utility::string_t>& getFlags();
    bool flagsIsSet() const;
    void unsetFlags();

    void setFlags(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Wckey;
    bool m_WckeyIsSet;
    std::vector<utility::string_t> m_Flags;
    bool m_FlagsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_37_job_wckey_H_ */
