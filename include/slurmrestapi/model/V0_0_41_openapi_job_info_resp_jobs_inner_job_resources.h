/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_41_openapi_job_info_resp_jobs_inner_job_resources.h
 *
 * Resources used by the job
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core.h"
#include <cpprest/details/basic_types.h>
#include <vector>
#include "slurmrestapi/model/V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes.h"

namespace hm {
namespace slurm {
namespace client {
namespace model {

class V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes;
class V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core;


/// <summary>
/// Resources used by the job
/// </summary>
class  V0_0_41_openapi_job_info_resp_jobs_inner_job_resources
    : public ModelBase
{
public:
    V0_0_41_openapi_job_info_resp_jobs_inner_job_resources();
    virtual ~V0_0_41_openapi_job_info_resp_jobs_inner_job_resources();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_41_openapi_job_info_resp_jobs_inner_job_resources members

    /// <summary>
    /// Scheduler consumable resource selection type
    /// </summary>
    std::vector<utility::string_t>& getSelectType();
    bool selectTypeIsSet() const;
    void unsetSelect_type();

    void setSelectType(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes> getNodes() const;
    bool nodesIsSet() const;
    void unsetNodes();

    void setNodes(const std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes>& value);

    /// <summary>
    /// Number of allocated CPUs
    /// </summary>
    int32_t getCpus() const;
    bool cpusIsSet() const;
    void unsetCpus();

    void setCpus(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core> getThreadsPerCore() const;
    bool threadsPerCoreIsSet() const;
    void unsetThreads_per_core();

    void setThreadsPerCore(const std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core>& value);


protected:
    std::vector<utility::string_t> m_Select_type;
    bool m_Select_typeIsSet;
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_nodes> m_Nodes;
    bool m_NodesIsSet;
    int32_t m_Cpus;
    bool m_CpusIsSet;
    std::shared_ptr<V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_threads_per_core> m_Threads_per_core;
    bool m_Threads_per_coreIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_job_info_resp_jobs_inner_job_resources_H_ */
