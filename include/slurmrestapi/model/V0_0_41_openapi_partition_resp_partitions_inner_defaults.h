/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_41_openapi_partition_resp_partitions_inner_defaults.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_41_openapi_partition_resp_partitions_inner_defaults_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_41_openapi_partition_resp_partitions_inner_defaults_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu.h"
#include "slurmrestapi/model/V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node.h"
#include "slurmrestapi/model/V0_0_41_openapi_partition_resp_partitions_inner_defaults_time.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu;
class V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node;
class V0_0_41_openapi_partition_resp_partitions_inner_defaults_time;


/// <summary>
/// 
/// </summary>
class  V0_0_41_openapi_partition_resp_partitions_inner_defaults
    : public ModelBase
{
public:
    V0_0_41_openapi_partition_resp_partitions_inner_defaults();
    virtual ~V0_0_41_openapi_partition_resp_partitions_inner_defaults();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_41_openapi_partition_resp_partitions_inner_defaults members

    /// <summary>
    /// DefMemPerCPU or DefMemPerNode
    /// </summary>
    int64_t getMemoryPerCpu() const;
    bool memoryPerCpuIsSet() const;
    void unsetMemory_per_cpu();

    void setMemoryPerCpu(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu> getPartitionMemoryPerCpu() const;
    bool partitionMemoryPerCpuIsSet() const;
    void unsetPartition_memory_per_cpu();

    void setPartitionMemoryPerCpu(const std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node> getPartitionMemoryPerNode() const;
    bool partitionMemoryPerNodeIsSet() const;
    void unsetPartition_memory_per_node();

    void setPartitionMemoryPerNode(const std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_time> getTime() const;
    bool timeIsSet() const;
    void unsetTime();

    void setTime(const std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_time>& value);

    /// <summary>
    /// JobDefaults
    /// </summary>
    utility::string_t getJob() const;
    bool jobIsSet() const;
    void unsetJob();

    void setJob(const utility::string_t& value);


protected:
    int64_t m_Memory_per_cpu;
    bool m_Memory_per_cpuIsSet;
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu> m_Partition_memory_per_cpu;
    bool m_Partition_memory_per_cpuIsSet;
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node> m_Partition_memory_per_node;
    bool m_Partition_memory_per_nodeIsSet;
    std::shared_ptr<V0_0_41_openapi_partition_resp_partitions_inner_defaults_time> m_Time;
    bool m_TimeIsSet;
    utility::string_t m_Job;
    bool m_JobIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_41_openapi_partition_resp_partitions_inner_defaults_H_ */
