/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_accruing.h"
#include "slurmrestapi/model/V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock.h"
#include "slurmrestapi/model/V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs.h"
#include "slurmrestapi/model/V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_jobs.h"
#include "slurmrestapi/model/V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_tres.h"

namespace hm {
namespace slurm {
namespace client {
namespace model {

class V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs;
class V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_tres;
class V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock;
class V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_jobs;
class V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_accruing;


/// <summary>
/// 
/// </summary>
class  V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max
    : public ModelBase
{
public:
    V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max();
    virtual ~V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs> getActiveJobs() const;
    bool activeJobsIsSet() const;
    void unsetActive_jobs();

    void setActiveJobs(const std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_tres> getTres() const;
    bool tresIsSet() const;
    void unsetTres();

    void setTres(const std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_tres>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock> getWallClock() const;
    bool wallClockIsSet() const;
    void unsetWall_clock();

    void setWallClock(const std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_jobs> getJobs() const;
    bool jobsIsSet() const;
    void unsetJobs();

    void setJobs(const std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_jobs>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_accruing> getAccruing() const;
    bool accruingIsSet() const;
    void unsetAccruing();

    void setAccruing(const std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_accruing>& value);


protected:
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs> m_Active_jobs;
    bool m_Active_jobsIsSet;
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_tres> m_Tres;
    bool m_TresIsSet;
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock> m_Wall_clock;
    bool m_Wall_clockIsSet;
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_jobs> m_Jobs;
    bool m_JobsIsSet;
    std::shared_ptr<V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_accruing> m_Accruing;
    bool m_AccruingIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_H_ */
