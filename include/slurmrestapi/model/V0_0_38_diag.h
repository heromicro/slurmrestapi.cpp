/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_38_diag.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_diag_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_diag_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_38_diag_statistics.h"
#include "slurmrestapi/model/V0_0_38_error.h"
#include "slurmrestapi/model/V0_0_38_meta.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class V0_0_38_meta;
class V0_0_38_error;
class V0_0_38_diag_statistics;

/// <summary>
/// 
/// </summary>
class  V0_0_38_diag
    : public ModelBase
{
public:
    V0_0_38_diag();
    virtual ~V0_0_38_diag();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_38_diag members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_38_meta> getMeta() const;
    bool metaIsSet() const;
    void unsetMeta();

    void setMeta(const std::shared_ptr<V0_0_38_meta>& value);

    /// <summary>
    /// slurm errors
    /// </summary>
    std::vector<std::shared_ptr<V0_0_38_error>>& getErrors();
    bool errorsIsSet() const;
    void unsetErrors();

    void setErrors(const std::vector<std::shared_ptr<V0_0_38_error>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_38_diag_statistics> getStatistics() const;
    bool statisticsIsSet() const;
    void unsetStatistics();

    void setStatistics(const std::shared_ptr<V0_0_38_diag_statistics>& value);


protected:
    std::shared_ptr<V0_0_38_meta> m_Meta;
    bool m_MetaIsSet;
    std::vector<std::shared_ptr<V0_0_38_error>> m_Errors;
    bool m_ErrorsIsSet;
    std::shared_ptr<V0_0_38_diag_statistics> m_Statistics;
    bool m_StatisticsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_diag_H_ */
