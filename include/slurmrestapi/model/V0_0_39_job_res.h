/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_39_job_res.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_39_job_res_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_39_job_res_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/AnyType.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace hm {
namespace slurm {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  V0_0_39_job_res
    : public ModelBase
{
public:
    V0_0_39_job_res();
    virtual ~V0_0_39_job_res();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_39_job_res members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNodes() const;
    bool nodesIsSet() const;
    void unsetNodes();

    void setNodes(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getAllocatedCores() const;
    bool allocatedCoresIsSet() const;
    void unsetAllocated_cores();

    void setAllocatedCores(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getAllocatedCpus() const;
    bool allocatedCpusIsSet() const;
    void unsetAllocated_cpus();

    void setAllocatedCpus(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getAllocatedHosts() const;
    bool allocatedHostsIsSet() const;
    void unsetAllocated_hosts();

    void setAllocatedHosts(int32_t value);

    /// <summary>
    /// job node resources
    /// </summary>
    std::vector<std::shared_ptr<AnyType>>& getAllocatedNodes();
    bool allocatedNodesIsSet() const;
    void unsetAllocated_nodes();

    void setAllocatedNodes(const std::vector<std::shared_ptr<AnyType>>& value);


protected:
    utility::string_t m_Nodes;
    bool m_NodesIsSet;
    int32_t m_Allocated_cores;
    bool m_Allocated_coresIsSet;
    int32_t m_Allocated_cpus;
    bool m_Allocated_cpusIsSet;
    int32_t m_Allocated_hosts;
    bool m_Allocated_hostsIsSet;
    std::vector<std::shared_ptr<AnyType>> m_Allocated_nodes;
    bool m_Allocated_nodesIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_39_job_res_H_ */
