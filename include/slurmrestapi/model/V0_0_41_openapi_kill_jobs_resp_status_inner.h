/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_41_openapi_kill_jobs_resp_status_inner.h
 *
 * List of jobs signal responses
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_kill_jobs_resp_status_inner_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_kill_jobs_resp_status_inner_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_40_kill_jobs_resp_job_error.h"
#include "slurmrestapi/model/V0_0_40_kill_jobs_resp_job_federation.h"
#include <cpprest/details/basic_types.h>
#include "slurmrestapi/model/V0_0_41_openapi_kill_jobs_resp_status_inner_job_id.h"

namespace hm {
namespace slurm {
namespace client {
namespace model {

class V0_0_40_kill_jobs_resp_job_error;
class V0_0_41_openapi_kill_jobs_resp_status_inner_job_id;
class V0_0_40_kill_jobs_resp_job_federation;


/// <summary>
/// List of jobs signal responses
/// </summary>
class  V0_0_41_openapi_kill_jobs_resp_status_inner
    : public ModelBase
{
public:
    V0_0_41_openapi_kill_jobs_resp_status_inner();
    virtual ~V0_0_41_openapi_kill_jobs_resp_status_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_41_openapi_kill_jobs_resp_status_inner members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_40_kill_jobs_resp_job_error> getError() const;
    bool errorIsSet() const;
    void unsetError();

    void setError(const std::shared_ptr<V0_0_40_kill_jobs_resp_job_error>& value);

    /// <summary>
    /// Job or Step ID that signaling failed
    /// </summary>
    utility::string_t getStepId() const;
    bool stepIdIsSet() const;
    void unsetStep_id();

    void setStepId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_41_openapi_kill_jobs_resp_status_inner_job_id> getJobId() const;
    bool jobIdIsSet() const;
    void unsetJob_id();

    void setJobId(const std::shared_ptr<V0_0_41_openapi_kill_jobs_resp_status_inner_job_id>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_40_kill_jobs_resp_job_federation> getFederation() const;
    bool federationIsSet() const;
    void unsetFederation();

    void setFederation(const std::shared_ptr<V0_0_40_kill_jobs_resp_job_federation>& value);


protected:
    std::shared_ptr<V0_0_40_kill_jobs_resp_job_error> m_Error;
    bool m_ErrorIsSet;
    utility::string_t m_Step_id;
    bool m_Step_idIsSet;
    std::shared_ptr<V0_0_41_openapi_kill_jobs_resp_status_inner_job_id> m_Job_id;
    bool m_Job_idIsSet;
    std::shared_ptr<V0_0_40_kill_jobs_resp_job_federation> m_Federation;
    bool m_FederationIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_41_openapi_kill_jobs_resp_status_inner_H_ */
