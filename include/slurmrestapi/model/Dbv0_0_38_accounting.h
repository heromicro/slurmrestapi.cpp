/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Dbv0_0_38_accounting.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_38_accounting_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_38_accounting_H_


#include "slurmrestapi/ModelBase.h"

#include <vector>
#include "slurmrestapi/model/Dbv0_0_38_tres_list_inner.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Dbv0_0_38_tres_list_inner;

/// <summary>
/// 
/// </summary>
class  Dbv0_0_38_accounting
    : public ModelBase
{
public:
    Dbv0_0_38_accounting();
    virtual ~Dbv0_0_38_accounting();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Dbv0_0_38_accounting members

    /// <summary>
    /// total seconds allocated
    /// </summary>
    int32_t getAllocated() const;
    bool allocatedIsSet() const;
    void unsetAllocated();

    void setAllocated(int32_t value);

    /// <summary>
    /// association/wckey ID
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();

    void setId(int32_t value);

    /// <summary>
    /// UNIX timestamp when accounting period started
    /// </summary>
    int32_t getStart() const;
    bool startIsSet() const;
    void unsetStart();

    void setStart(int32_t value);

    /// <summary>
    /// TRES list of attributes
    /// </summary>
    std::vector<std::shared_ptr<Dbv0_0_38_tres_list_inner>>& getTRES();
    bool tRESIsSet() const;
    void unsetTRES();

    void setTRES(const std::vector<std::shared_ptr<Dbv0_0_38_tres_list_inner>>& value);


protected:
    int32_t m_Allocated;
    bool m_AllocatedIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    int32_t m_Start;
    bool m_StartIsSet;
    std::vector<std::shared_ptr<Dbv0_0_38_tres_list_inner>> m_TRES;
    bool m_TRESIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Dbv0_0_38_accounting_H_ */
