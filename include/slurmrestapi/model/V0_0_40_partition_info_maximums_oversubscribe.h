/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_40_partition_info_maximums_oversubscribe.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_40_partition_info_maximums_oversubscribe_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_40_partition_info_maximums_oversubscribe_H_


#include "slurmrestapi/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace hm {
namespace slurm {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  V0_0_40_partition_info_maximums_oversubscribe
    : public ModelBase
{
public:
    V0_0_40_partition_info_maximums_oversubscribe();
    virtual ~V0_0_40_partition_info_maximums_oversubscribe();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_40_partition_info_maximums_oversubscribe members

    /// <summary>
    /// Maximum number of jobs allowed to oversubscribe resources
    /// </summary>
    int32_t getJobs() const;
    bool jobsIsSet() const;
    void unsetJobs();

    void setJobs(int32_t value);

    /// <summary>
    /// Flags applicable to the OverSubscribe setting
    /// </summary>
    std::vector<utility::string_t>& getFlags();
    bool flagsIsSet() const;
    void unsetFlags();

    void setFlags(const std::vector<utility::string_t>& value);


protected:
    int32_t m_Jobs;
    bool m_JobsIsSet;
    std::vector<utility::string_t> m_Flags;
    bool m_FlagsIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_40_partition_info_maximums_oversubscribe_H_ */
