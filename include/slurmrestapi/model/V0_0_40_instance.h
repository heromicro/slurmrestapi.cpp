/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_40_instance.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_40_instance_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_40_instance_H_


#include "slurmrestapi/ModelBase.h"

#include "slurmrestapi/model/V0_0_40_instance_time.h"
#include <cpprest/details/basic_types.h>

namespace hm {
namespace slurm {
namespace client {
namespace model {

class V0_0_40_instance_time;


/// <summary>
/// 
/// </summary>
class  V0_0_40_instance
    : public ModelBase
{
public:
    V0_0_40_instance();
    virtual ~V0_0_40_instance();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_40_instance members

    /// <summary>
    /// Cluster name
    /// </summary>
    utility::string_t getCluster() const;
    bool clusterIsSet() const;
    void unsetCluster();

    void setCluster(const utility::string_t& value);

    /// <summary>
    /// Arbitrary string used for node filtering if extra constraints are enabled
    /// </summary>
    utility::string_t getExtra() const;
    bool extraIsSet() const;
    void unsetExtra();

    void setExtra(const utility::string_t& value);

    /// <summary>
    /// Cloud instance ID
    /// </summary>
    utility::string_t getInstanceId() const;
    bool instanceIdIsSet() const;
    void unsetInstance_id();

    void setInstanceId(const utility::string_t& value);

    /// <summary>
    /// Cloud instance type
    /// </summary>
    utility::string_t getInstanceType() const;
    bool instanceTypeIsSet() const;
    void unsetInstance_type();

    void setInstanceType(const utility::string_t& value);

    /// <summary>
    /// NodeName
    /// </summary>
    utility::string_t getNodeName() const;
    bool nodeNameIsSet() const;
    void unsetNode_name();

    void setNodeName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<V0_0_40_instance_time> getTime() const;
    bool timeIsSet() const;
    void unsetTime();

    void setTime(const std::shared_ptr<V0_0_40_instance_time>& value);


protected:
    utility::string_t m_Cluster;
    bool m_ClusterIsSet;
    utility::string_t m_Extra;
    bool m_ExtraIsSet;
    utility::string_t m_Instance_id;
    bool m_Instance_idIsSet;
    utility::string_t m_Instance_type;
    bool m_Instance_typeIsSet;
    utility::string_t m_Node_name;
    bool m_Node_nameIsSet;
    std::shared_ptr<V0_0_40_instance_time> m_Time;
    bool m_TimeIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_40_instance_H_ */
