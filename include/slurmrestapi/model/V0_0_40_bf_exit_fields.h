/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_40_bf_exit_fields.h
 *
 * 
 */

#ifndef HM_SLURM_CLIENT_MODEL_V0_0_40_bf_exit_fields_H_
#define HM_SLURM_CLIENT_MODEL_V0_0_40_bf_exit_fields_H_


#include "slurmrestapi/ModelBase.h"


namespace hm {
namespace slurm {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  V0_0_40_bf_exit_fields
    : public ModelBase
{
public:
    V0_0_40_bf_exit_fields();
    virtual ~V0_0_40_bf_exit_fields();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_40_bf_exit_fields members

    /// <summary>
    /// Reached end of queue
    /// </summary>
    int32_t getEndJobQueue() const;
    bool endJobQueueIsSet() const;
    void unsetEnd_job_queue();

    void setEndJobQueue(int32_t value);

    /// <summary>
    /// Reached number of jobs allowed to start
    /// </summary>
    int32_t getBfMaxJobStart() const;
    bool bfMaxJobStartIsSet() const;
    void unsetBf_max_job_start();

    void setBfMaxJobStart(int32_t value);

    /// <summary>
    /// Reached number of jobs allowed to be tested
    /// </summary>
    int32_t getBfMaxJobTest() const;
    bool bfMaxJobTestIsSet() const;
    void unsetBf_max_job_test();

    void setBfMaxJobTest(int32_t value);

    /// <summary>
    /// Reached maximum allowed scheduler time
    /// </summary>
    int32_t getBfMaxTime() const;
    bool bfMaxTimeIsSet() const;
    void unsetBf_max_time();

    void setBfMaxTime(int32_t value);

    /// <summary>
    /// Reached table size limit
    /// </summary>
    int32_t getBfNodeSpaceSize() const;
    bool bfNodeSpaceSizeIsSet() const;
    void unsetBf_node_space_size();

    void setBfNodeSpaceSize(int32_t value);

    /// <summary>
    /// System state changed
    /// </summary>
    int32_t getStateChanged() const;
    bool stateChangedIsSet() const;
    void unsetState_changed();

    void setStateChanged(int32_t value);


protected:
    int32_t m_End_job_queue;
    bool m_End_job_queueIsSet;
    int32_t m_Bf_max_job_start;
    bool m_Bf_max_job_startIsSet;
    int32_t m_Bf_max_job_test;
    bool m_Bf_max_job_testIsSet;
    int32_t m_Bf_max_time;
    bool m_Bf_max_timeIsSet;
    int32_t m_Bf_node_space_size;
    bool m_Bf_node_space_sizeIsSet;
    int32_t m_State_changed;
    bool m_State_changedIsSet;
};


}
}
}
}

#endif /* HM_SLURM_CLIENT_MODEL_V0_0_40_bf_exit_fields_H_ */
