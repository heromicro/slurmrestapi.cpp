/**
 * Slurm REST API
 * API to access and control Slurm
 *
 * The version of the OpenAPI document: Slurm-24.05.5&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.10.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_40_openapi_meta_plugin.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_openapi_meta_plugin_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_openapi_meta_plugin_H_


#include "slurmrestapi/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  V0_0_40_openapi_meta_plugin
    : public ModelBase
{
public:
    V0_0_40_openapi_meta_plugin();
    virtual ~V0_0_40_openapi_meta_plugin();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_40_openapi_meta_plugin members

    /// <summary>
    /// Slurm plugin type (if applicable)
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);

    /// <summary>
    /// Slurm plugin name (if applicable)
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();

    void setName(const utility::string_t& value);

    /// <summary>
    /// Slurm data_parser plugin
    /// </summary>
    utility::string_t getDataParser() const;
    bool dataParserIsSet() const;
    void unsetData_parser();

    void setDataParser(const utility::string_t& value);

    /// <summary>
    /// Slurm accounting plugin
    /// </summary>
    utility::string_t getAccountingStorage() const;
    bool accountingStorageIsSet() const;
    void unsetAccounting_storage();

    void setAccountingStorage(const utility::string_t& value);


protected:
    utility::string_t m_Type;
    bool m_TypeIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Data_parser;
    bool m_Data_parserIsSet;
    utility::string_t m_Accounting_storage;
    bool m_Accounting_storageIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_40_openapi_meta_plugin_H_ */
