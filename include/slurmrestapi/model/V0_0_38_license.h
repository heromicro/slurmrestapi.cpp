/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V0_0_38_license.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_license_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_license_H_


#include "slurmrestapi/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  V0_0_38_license
    : public ModelBase
{
public:
    V0_0_38_license();
    virtual ~V0_0_38_license();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V0_0_38_license members

    /// <summary>
    /// name of license
    /// </summary>
    utility::string_t getLicenseName() const;
    bool licenseNameIsSet() const;
    void unsetLicenseName();

    void setLicenseName(const utility::string_t& value);

    /// <summary>
    /// total number of licenses
    /// </summary>
    int32_t getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(int32_t value);

    /// <summary>
    /// number of licenses in use
    /// </summary>
    int32_t getUsed() const;
    bool usedIsSet() const;
    void unsetUsed();

    void setUsed(int32_t value);

    /// <summary>
    /// number of licenses available
    /// </summary>
    int32_t getFree() const;
    bool freeIsSet() const;
    void unsetFree();

    void setFree(int32_t value);

    /// <summary>
    /// number of licenses reserved
    /// </summary>
    int32_t getReserved() const;
    bool reservedIsSet() const;
    void unsetReserved();

    void setReserved(int32_t value);

    /// <summary>
    /// license is remote
    /// </summary>
    bool isRemote() const;
    bool remoteIsSet() const;
    void unsetRemote();

    void setRemote(bool value);


protected:
    utility::string_t m_LicenseName;
    bool m_LicenseNameIsSet;
    int32_t m_Total;
    bool m_TotalIsSet;
    int32_t m_Used;
    bool m_UsedIsSet;
    int32_t m_Free;
    bool m_FreeIsSet;
    int32_t m_Reserved;
    bool m_ReservedIsSet;
    bool m_Remote;
    bool m_RemoteIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V0_0_38_license_H_ */
